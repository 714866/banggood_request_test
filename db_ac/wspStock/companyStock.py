# from mysql_connect import connect_dbfrom db_ac.modular.mapper import connect_DB# import pymysqlwsp_db = "wsp_online"selectSql = "select * from productshift where GoodsType=34"def findStockdetail(goodstype):    cursor = connect_DB(wsp_db)    selectSql = """  SELECT        g.base_product_code AS pbuCode,        (CASE WHEN bg.id IS NULL THEN gep.product_code ELSE bg.bg_product_code END) AS productCode,        (CASE WHEN bg.id IS NULL THEN gep.external_code ELSE bg.bg_property_code END) AS externalCode,        pif.batch_code AS batchCode,        pif.generate_date AS generateDate,        pif.effective_date AS effectiveDate,        g.base_product_name AS productName,        gmo.master_name AS ownerName,        gmm.master_name AS managerName,        pc.`name` AS processCenterName,        gsl.old_logic_quantity AS oldLogicQuantity,        gsl.new_logic_quantity AS newLogicQuantity,        gsl.old_available_quantity AS oldAvaliableQuantity,        gsl.new_available_quantity AS newAvaliableQuantity,        gsl.old_execute_quantity AS oldExecuteQuantity,        gsl.new_execute_quantity AS newExecuteQuantity,        gsl.old_out_quantity AS oldOutQuantity,        gsl.new_out_quantity AS newOutQuantity,        gsl.old_in_quantity AS oldInQuantity,        gsl.new_in_quantity AS newInQuantity,        gsl.global_order_code AS globalOrderCode,        gsl.business_order_code AS businessOrderCode,        gsl.operate_time AS operateTime,        gsl.operate_user_name AS operateUserName,        gsl.operate_platform AS operatePlatform,        gsl.operate_type AS operateType,        sct.type_name AS typeName,        gsl.create_time as createTime        FROM global_stock_log gsl        INNER JOIN global_stock gs ON gs.id = gsl.global_stock_id        INNER JOIN goods g ON gs.goods_id = g.id        LEFT JOIN LATERAL(SELECT gep.product_code, gep.external_code FROM goods_external_product gep WHERE gs.goods_id = gep.goods_id LIMIT 1) gep ON TRUE        LEFT JOIN LATERAL(SELECT bg.id,bg.bg_product_code, bg.bg_property_code FROM goods_mapper_bg_product bg WHERE gs.goods_id = bg.goods_id LIMIT 1) bg ON TRUE        LEFT JOIN produce_info pif ON gs.produce_info_id = pif.id        INNER JOIN goods_master gmo ON gs.owner_id = gmo.id        INNER JOIN goods_master gmm ON gs.manager_id = gmm.id        INNER JOIN sys_processcenter pc ON gs.processcenter_id = pc.processcenter_id        INNER JOIN stock_change_type sct ON sct.id = gsl.stock_change_type_id        WHERE 1 = 1            and g.id=517004672909975552 and pc.processcenter_id=722            and (sct.type_name='wsp激活' or sct.type_name='销售出库')  order by gsl.global_order_code """    stockdetails=int(cursor.fetchall(selectSql))    print(stockdetails)    stocknum =''    for stockdetail in stockdetails:        print(stockdetail['oldLogicQuantity'],stockdetail['newLogicQuantity'],stockdetail['oldExecuteQuantity'],stockdetail['newExecuteQuantity'])if __name__=="__main__":    #设置处理中心    processcenter = 722    #设置销售类型    delivery_type = 0    findStockdetail(delivery_type,processcenter)